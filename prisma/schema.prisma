// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//===== criar uma migration comando:  yarn prisma migrate dev   ====//==create_models_salao
 // Define o modelo para os clientes
//model User {  id  Int  @id @default(autoincrement()) 
 // name String
 // email String
 // password String
 // created_at DateTime? @default(now())
 // updated_at DateTime? @default(now())

 
 //}


model User {
  id         String         @id @default(uuid())
  name        String
  email       String
  password   String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  
  // Relacionamento com os agendamentos
  agendamentos Horario[]
}

// Define o modelo para os serviços oferecidos
model Servico {
  id          String        @id @default(uuid())
  nome        String
  descricao   String?
  valor       Float
  
  // Relacionamento com os horários
  horarios    Horario[]
  
  // Relacionamento com os agendamentos
  //agendamentos Agendamento[]
}

// Define o modelo para os horários disponíveis
model Horario {
  id          String         @id @default(uuid())
  user         User      @relation(fields: [userId], references: [id])
  userId      String
  servico     Servico      @relation(fields: [servicoId], references: [id])
  servicoId    String
  horarios     String
  dataAgend    String
  disponivel  Boolean      @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  // Relacionamento com os agendamentos
  //agendamentos Agendamento[]
}

// Define o modelo para os agendamentos
//model Agendamento {
 // id            String         @id @default(uuid())
 // user         User      @relation(fields: [userId], references: [id])
 // userId      String
  //servico       Servico      @relation(fields: [servicoId], references: [id])
 // servicoId     String
 // horario       Horario      @relation(fields: [horarioId], references: [id])
 // horarioId     String
 // valor         Float
 //  created_at DateTime? @default(now())
//  updated_at DateTime? @default(now())

//  dataAgendamento DateTime    @default(now())
//}